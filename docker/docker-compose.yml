services:
  postgresdb:
    image: postgres:17.4
    restart: always
    ports:
      - "7744:5432"
    environment:
#      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - postgresdb-data:/var/lib/postgresql/data
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    restart: always
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_LOG_LEVEL: info
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresdb:5432/user_service
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
    depends_on:
      - postgresdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443", "--import-realm"]
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
      - keycloak-data:/opt/keycloak/data
    ports:
      - "7080:7080"
      - "7443:7443"
    networks:
      - backend

  redis:
    image: redis:7.4.2
    restart: always
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

volumes:
  redis-data:
    driver: local
  postgresdb-data:
    driver: local
  keycloak-data:
    driver: local

networks:
  backend:
    driver: bridge
