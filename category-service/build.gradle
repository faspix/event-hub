plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}


group = 'com.faspix'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url = uri(project.findProperty("REPOSITORY_URL") ?: "")
        credentials {
            username = project.findProperty("REPOSITORY_USERNAME") ?: ""
            password = project.findProperty("REPOSITORY_PASSWORD") ?: ""
        }
    }
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', '2024.0.0')
    set('resilience4jVersion', '2.2.0')
}

// Spring cloud
dependencies {
    implementation "org.springframework.cloud:spring-cloud-starter"
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
}

// Spring boot starters
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

// Resilience4j
dependencies {
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"

}

// Monitoring
dependencies {
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.github.openfeign:feign-micrometer:13.5'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.5.0-M3'
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'
}

// Other
dependencies {
    implementation 'com.faspix.shared:shared-lib:0.0.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core:4.31.0'
}

// Tests
dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:postgresql:1.21.0'
    testImplementation "org.testcontainers:junit-jupiter:1.21.0"
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
